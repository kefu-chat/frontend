!(function (e, t) {
  "object" == typeof exports && "undefined" != typeof module
    ? t(
        exports,
        require("@angular/core"),
        require("@shared/lib/ngx-emoji-mart/ngx-emoji"),
        require("@angular/common"),
        require("@angular/forms")
      )
    : "function" == typeof define && define.amd
    ? define("@shared/lib/ngx-emoji-mart", [
        "exports",
        "@angular/core",
        "@shared/lib/ngx-emoji-mart/ngx-emoji",
        "@angular/common",
        "@angular/forms",
      ], t)
    : t(
        (((e = e || self).ctrl = e.ctrl || {}),
        (e.ctrl["ngx-emoji-mart"] = {})),
        e.ng.core,
        e.ctrl["ngx-emoji-mart"]["ngx-emoji"],
        e.ng.common,
        e.ng.forms
      );
})(this, function (e, t, i, n, o) {
  "use strict";
  var s = (function () {
    function e() {
      (this.categories = []),
        (this.icons = {}),
        (this.anchorClick = new t.EventEmitter());
    }
    return (
      (e.prototype.trackByFn = function (e, t) {
        return t.id;
      }),
      (e.prototype.handleClick = function (e, t) {
        this.anchorClick.emit({ category: this.categories[t], index: t });
      }),
      e
    );
  })();
  (s.decorators = [
    {
      type: t.Component,
      args: [
        {
          selector: "emoji-mart-anchors",
          template:
            '\n  <div class="emoji-mart-anchors">\n    <ng-template ngFor let-category [ngForOf]="categories" let-idx="index" [ngForTrackBy]="trackByFn">\n      <span\n        *ngIf="category.anchor !== false"\n        [attr.title]="i18n.categories[category.id]"\n        (click)="this.handleClick($event, idx)"\n        class="emoji-mart-anchor"\n        [class.emoji-mart-anchor-selected]="category.name === selected"\n        [style.color]="category.name === selected ? color : null"\n      >\n        <div>\n          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">\n            <path [attr.d]="icons[category.id]" />\n          </svg>\n        </div>\n        <span class="emoji-mart-anchor-bar" [style.background-color]="color"></span>\n      </span>\n    </ng-template>\n  </div>\n  ',
          changeDetection: t.ChangeDetectionStrategy.OnPush,
          preserveWhitespaces: !1,
        },
      ],
    },
  ]),
    (s.propDecorators = {
      categories: [{ type: t.Input }],
      color: [{ type: t.Input }],
      selected: [{ type: t.Input }],
      i18n: [{ type: t.Input }],
      icons: [{ type: t.Input }],
      anchorClick: [{ type: t.Output }],
    });
  var r = (function () {
    function e() {
      (this.NAMESPACE = "emoji-mart"),
        (this.frequently = null),
        (this.defaults = {}),
        (this.initialized = !1),
        (this.DEFAULTS = [
          "+1",
          "grinning",
          "kissing_heart",
          "heart_eyes",
          "laughing",
          "stuck_out_tongue_winking_eye",
          "sweat_smile",
          "joy",
          "scream",
          "disappointed",
          "unamused",
          "weary",
          "sob",
          "sunglasses",
          "heart",
          "poop",
        ]);
    }
    return (
      (e.prototype.init = function () {
        (this.frequently = JSON.parse(
          localStorage.getItem(this.NAMESPACE + ".frequently") || "null"
        )),
          (this.initialized = !0);
      }),
      (e.prototype.add = function (e) {
        this.initialized || this.init(),
          this.frequently || (this.frequently = this.defaults),
          this.frequently[e.id] || (this.frequently[e.id] = 0),
          (this.frequently[e.id] += 1),
          localStorage.setItem(this.NAMESPACE + ".last", e.id),
          localStorage.setItem(
            this.NAMESPACE + ".frequently",
            JSON.stringify(this.frequently)
          );
      }),
      (e.prototype.get = function (e, t) {
        var i = this;
        if ((this.initialized || this.init(), null === this.frequently)) {
          this.defaults = {};
          for (var n = [], o = 0; o < e; o++)
            (this.defaults[this.DEFAULTS[o]] = e - o), n.push(this.DEFAULTS[o]);
          return n;
        }
        var s = e * t,
          r = Object.keys(this.frequently)
            .sort(function (e, t) {
              return i.frequently[e] - i.frequently[t];
            })
            .reverse()
            .slice(0, s),
          a = localStorage.getItem(this.NAMESPACE + ".last");
        return a && !r.includes(a) && (r.pop(), r.push(a)), r;
      }),
      e
    );
  })();
  (r.ɵprov = t.ɵɵdefineInjectable({
    factory: function () {
      return new r();
    },
    token: r,
    providedIn: "root",
  })),
    (r.decorators = [{ type: t.Injectable, args: [{ providedIn: "root" }] }]);
  var a = (function () {
    function e(e, i, n) {
      (this.ref = e),
        (this.emojiService = i),
        (this.frequently = n),
        (this.hasStickyPosition = !0),
        (this.name = ""),
        (this.perLine = 9),
        (this.totalFrequentLines = 4),
        (this.recent = []),
        (this.custom = []),
        (this.hideObsolete = !0),
        (this.emojiOver = new t.EventEmitter()),
        (this.emojiLeave = new t.EventEmitter()),
        (this.emojiClick = new t.EventEmitter()),
        (this.containerStyles = {}),
        (this.labelStyles = {}),
        (this.labelSpanStyles = {}),
        (this.margin = 0),
        (this.minMargin = 0),
        (this.maxMargin = 0),
        (this.top = 0);
    }
    return (
      (e.prototype.ngOnInit = function () {
        (this.emojis = this.getEmojis()),
          this.emojis || (this.containerStyles = { display: "none" }),
          this.hasStickyPosition || (this.labelStyles = { height: 28 });
      }),
      (e.prototype.memoizeSize = function () {
        var e = this.container.nativeElement.parentNode.parentNode,
          t = this.container.nativeElement.getBoundingClientRect(),
          i = t.top,
          n = t.height,
          o = e.getBoundingClientRect().top,
          s = this.label.nativeElement.getBoundingClientRect().height;
        (this.top = i - o + e.scrollTop),
          (this.maxMargin = 0 === n ? 0 : n - s);
      }),
      (e.prototype.handleScroll = function (e) {
        var t = e - this.top;
        return (
          (t =
            (t = t < this.minMargin ? this.minMargin : t) > this.maxMargin
              ? this.maxMargin
              : t) !== this.margin &&
          (this.hasStickyPosition ||
            (this.label.nativeElement.style.top = t + "px"),
          (this.margin = t),
          !0)
        );
      }),
      (e.prototype.getEmojis = function () {
        var e = this;
        if ("Recent" === this.name) {
          var t =
            this.recent ||
            this.frequently.get(this.perLine, this.totalFrequentLines);
          if (
            ((t && t.length) ||
              (t = this.frequently.get(this.perLine, this.totalFrequentLines)),
            t.length &&
              (this.emojis = t
                .map(function (t) {
                  var i = e.custom.filter(function (e) {
                    return e.id === t;
                  })[0];
                  return i || t;
                })
                .filter(function (t) {
                  return !!e.emojiService.getData(t);
                })),
            (!this.emojis || 0 === this.emojis.length) && t.length > 0)
          )
            return null;
        }
        return this.emojis && (this.emojis = this.emojis.slice(0)), this.emojis;
      }),
      (e.prototype.updateDisplay = function (e) {
        (this.containerStyles.display = e),
          this.getEmojis(),
          this.ref.detectChanges();
      }),
      (e.prototype.trackById = function (e, t) {
        return t;
      }),
      e
    );
  })();
  (a.decorators = [
    {
      type: t.Component,
      args: [
        {
          selector: "emoji-category",
          template:
            '\n  <section #container class="emoji-mart-category"\n    [attr.aria-label]="i18n.categories[id]"\n    [class.emoji-mart-no-results]="emojis && !emojis.length"\n    [ngStyle]="containerStyles">\n    <div class="emoji-mart-category-label"\n      [ngStyle]="labelStyles"\n      [attr.data-name]="name">\n      \x3c!-- already labeled by the section aria-label --\x3e\n      <span #label [ngStyle]="labelSpanStyles" aria-hidden="true">\n        {{ i18n.categories[id] }}\n      </span>\n    </div>\n\n    <ng-template [ngIf]="emojis">\n      <ngx-emoji\n        *ngFor="let emoji of emojis; trackBy: trackById"\n        [emoji]="emoji"\n        [size]="emojiSize"\n        [skin]="emojiSkin"\n        [isNative]="emojiIsNative"\n        [set]="emojiSet"\n        [sheetSize]="emojiSheetSize"\n        [forceSize]="emojiForceSize"\n        [tooltip]="emojiTooltip"\n        [backgroundImageFn]="emojiBackgroundImageFn"\n        [hideObsolete]="hideObsolete"\n        (emojiOver)="emojiOver.emit($event)"\n        (emojiLeave)="emojiLeave.emit($event)"\n        (emojiClick)="emojiClick.emit($event)"\n      ></ngx-emoji>\n    </ng-template>\n\n    <div *ngIf="emojis && !emojis.length">\n      <div>\n        <ngx-emoji\n          [emoji]="notFoundEmoji"\n          size="38"\n          [skin]="emojiSkin"\n          [isNative]="emojiIsNative"\n          [set]="emojiSet"\n          [sheetSize]="emojiSheetSize"\n          [forceSize]="emojiForceSize"\n          [tooltip]="emojiTooltip"\n          [backgroundImageFn]="emojiBackgroundImageFn"\n          [useButton]="emojiUseButton"\n        ></ngx-emoji>\n      </div>\n\n      <div class="emoji-mart-no-results-label">\n        {{ i18n.notfound }}\n      </div>\n    </div>\n\n  </section>\n  ',
          changeDetection: t.ChangeDetectionStrategy.OnPush,
          preserveWhitespaces: !1,
        },
      ],
    },
  ]),
    (a.ctorParameters = function () {
      return [
        { type: t.ChangeDetectorRef },
        { type: i.EmojiService },
        { type: r },
      ];
    }),
    (a.propDecorators = {
      emojis: [{ type: t.Input }],
      hasStickyPosition: [{ type: t.Input }],
      name: [{ type: t.Input }],
      perLine: [{ type: t.Input }],
      totalFrequentLines: [{ type: t.Input }],
      recent: [{ type: t.Input }],
      custom: [{ type: t.Input }],
      i18n: [{ type: t.Input }],
      id: [{ type: t.Input }],
      hideObsolete: [{ type: t.Input }],
      notFoundEmoji: [{ type: t.Input }],
      emojiIsNative: [{ type: t.Input }],
      emojiSkin: [{ type: t.Input }],
      emojiSize: [{ type: t.Input }],
      emojiSet: [{ type: t.Input }],
      emojiSheetSize: [{ type: t.Input }],
      emojiForceSize: [{ type: t.Input }],
      emojiTooltip: [{ type: t.Input }],
      emojiBackgroundImageFn: [{ type: t.Input }],
      emojiUseButton: [{ type: t.Input }],
      emojiOver: [{ type: t.Output }],
      emojiLeave: [{ type: t.Output }],
      emojiClick: [{ type: t.Output }],
      container: [{ type: t.ViewChild, args: ["container", { static: !0 }] }],
      label: [{ type: t.ViewChild, args: ["label", { static: !0 }] }],
    });
  Object.create;
  function c(e) {
    var t = "function" == typeof Symbol && Symbol.iterator,
      i = t && e[t],
      n = 0;
    if (i) return i.call(e);
    if (e && "number" == typeof e.length)
      return {
        next: function () {
          return (
            e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e }
          );
        },
      };
    throw new TypeError(
      t ? "Object is not iterable." : "Symbol.iterator is not defined."
    );
  }
  function l(e, t) {
    var i = "function" == typeof Symbol && e[Symbol.iterator];
    if (!i) return e;
    var n,
      o,
      s = i.call(e),
      r = [];
    try {
      for (; (void 0 === t || t-- > 0) && !(n = s.next()).done; )
        r.push(n.value);
    } catch (e) {
      o = { error: e };
    } finally {
      try {
        n && !n.done && (i = s.return) && i.call(s);
      } finally {
        if (o) throw o.error;
      }
    }
    return r;
  }
  Object.create;
  function h(e) {
    return e.reduce(function (e, t) {
      return e.includes(t) || e.push(t), e;
    }, []);
  }
  function m(e, t) {
    var i = h(e),
      n = h(t);
    return i.filter(function (e) {
      return n.indexOf(e) >= 0;
    });
  }
  var u = (function () {
    function e(e) {
      var t,
        i,
        n = this;
      (this.emojiService = e),
        (this.originalPool = {}),
        (this.index = {}),
        (this.emojisList = {}),
        (this.emoticonsList = {}),
        (this.emojiSearch = {});
      var o = function (e) {
          var t = e.shortNames,
            i = e.emoticons,
            o = t[0];
          i.forEach(function (e) {
            n.emoticonsList[e] || (n.emoticonsList[e] = o);
          }),
            (s.emojisList[o] = s.emojiService.getSanitizedData(o)),
            (s.originalPool[o] = e);
        },
        s = this;
      try {
        for (
          var r = c(this.emojiService.emojis), a = r.next();
          !a.done;
          a = r.next()
        ) {
          o(a.value);
        }
      } catch (e) {
        t = { error: e };
      } finally {
        try {
          a && !a.done && (i = r.return) && i.call(r);
        } finally {
          if (t) throw t.error;
        }
      }
    }
    return (
      (e.prototype.addCustomToPool = function (e, t) {
        var i = this;
        e.forEach(function (e) {
          var n = e.id || e.shortNames[0];
          n &&
            !t[n] &&
            ((t[n] = i.emojiService.getData(e)),
            (i.emojisList[n] = i.emojiService.getSanitizedData(e)));
        });
      }),
      (e.prototype.search = function (e, t, n, o, s, r) {
        var a,
          l = this;
        void 0 === n && (n = 75),
          void 0 === o && (o = []),
          void 0 === s && (s = []),
          void 0 === r && (r = []),
          this.addCustomToPool(r, this.originalPool);
        var h = this.originalPool;
        if (e.length) {
          if ("-" === e || "-1" === e) return [this.emojisList[-1]];
          if ("+" === e || "+1" === e) return [this.emojisList["+1"]];
          var u,
            p = e.toLowerCase().split(/[\s|,|\-|_]+/);
          if (
            (p.length > 2 && (p = [p[0], p[1]]),
            (o.length || s.length) &&
              ((h = {}),
              i.categories.forEach(function (e) {
                var t,
                  i = !o || !o.length || o.indexOf(e.id) > -1,
                  n = !(!s || !s.length) && s.indexOf(e.id) > -1;
                i &&
                  !n &&
                  (null === (t = e.emojis) ||
                    void 0 === t ||
                    t.forEach(function (e) {
                      var t,
                        i = l.emojiService.getData(e);
                      h[
                        null !== (t = null == i ? void 0 : i.id) && void 0 !== t
                          ? t
                          : ""
                      ] = i;
                    }));
              }),
              r.length))
          ) {
            var d = !o || !o.length || o.indexOf("custom") > -1,
              g = !(!s || !s.length) && s.indexOf("custom") > -1;
            d && !g && this.addCustomToPool(r, h);
          }
          a =
            (u = p
              .map(function (e) {
                for (
                  var t = h,
                    i = l.index,
                    n = 0,
                    o = function (o) {
                      var s,
                        r,
                        a = e[o];
                      if ((n++, i[a] || (i[a] = {}), !(i = i[a]).results)) {
                        var h = {};
                        (i.results = []), (i.pool = {});
                        try {
                          for (
                            var m = ((s = void 0), c(Object.keys(t))),
                              u = m.next();
                            !u.done;
                            u = m.next()
                          ) {
                            var p = u.value,
                              d = t[p];
                            l.emojiSearch[p] ||
                              (l.emojiSearch[p] = l.buildSearch(
                                d.short_names,
                                d.name,
                                d.id,
                                d.keywords,
                                d.emoticons
                              ));
                            var g = l.emojiSearch[p],
                              y = e.substr(0, n),
                              f = g.indexOf(y);
                            if (-1 !== f) {
                              var j = f + 1;
                              y === p && (j = 0),
                                i.results.push(l.emojisList[p]),
                                (i.pool[p] = d),
                                (h[p] = j);
                            }
                          }
                        } catch (e) {
                          s = { error: e };
                        } finally {
                          try {
                            u && !u.done && (r = m.return) && r.call(m);
                          } finally {
                            if (s) throw s.error;
                          }
                        }
                        i.results.sort(function (e, t) {
                          return h[e.id] - h[t.id];
                        });
                      }
                      t = i.pool;
                    },
                    s = 0;
                  s < e.length;
                  s++
                )
                  o(s);
                return i.results;
              })
              .filter(function (e) {
                return e;
              })).length > 1
              ? m.apply(null, u)
              : u.length
              ? u[0]
              : [];
        }
        return (
          a &&
            (t &&
              (a = a.filter(function (e) {
                return !(!e || !e.id) && t(l.emojiService.names[e.id]);
              })),
            a && a.length > n && (a = a.slice(0, n))),
          a || null
        );
      }),
      (e.prototype.buildSearch = function (e, t, i, n, o) {
        var s = [],
          r = function (e, t) {
            e &&
              (Array.isArray(e) ? e : [e]).forEach(function (e) {
                (t ? e.split(/[-|_|\s]+/) : [e]).forEach(function (e) {
                  (e = e.toLowerCase()), s.includes(e) || s.push(e);
                });
              });
          };
        return r(e, !0), r(t, !0), r(i, !0), r(n, !0), r(o, !1), s.join(",");
      }),
      e
    );
  })();
  (u.ɵprov = t.ɵɵdefineInjectable({
    factory: function () {
      return new u(t.ɵɵinject(i.EmojiService));
    },
    token: u,
    providedIn: "root",
  })),
    (u.decorators = [{ type: t.Injectable, args: [{ providedIn: "root" }] }]),
    (u.ctorParameters = function () {
      return [{ type: i.EmojiService }];
    });
  var p = {
      activity:
        "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24m10 11h-5c.3-2.5 1.3-4.8 2-6.1a10 10 0 0 1 3 6.1m-9 0V2a10 10 0 0 1 4.4 1.6A18 18 0 0 0 15 11h-2zm-2 0H9a18 18 0 0 0-2.4-7.4A10 10 0 0 1 11 2.1V11zm0 2v9a10 10 0 0 1-4.4-1.6A18 18 0 0 0 9 13h2zm4 0a18 18 0 0 0 2.4 7.4 10 10 0 0 1-4.4 1.5V13h2zM5 4.9c.7 1.3 1.7 3.6 2 6.1H2a10 10 0 0 1 3-6.1M2 13h5c-.3 2.5-1.3 4.8-2 6.1A10 10 0 0 1 2 13m17 6.1c-.7-1.3-1.7-3.6-2-6.1h5a10 10 0 0 1-3 6.1",
      custom:
        "M10 1h3v21h-3zm10.186 4l1.5 2.598L3.5 18.098 2 15.5zM2 7.598L3.5 5l18.186 10.5-1.5 2.598z",
      flags:
        "M0 0l6 24h2L2 0zm21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.6 3h7.8l2 8H8.6l-2-8zm8.8 10l-2.9 1.9-.4-1.9h3.3zm3.6 0l-1.5-6h2l2 8H16l3-2z",
      foods:
        "M17 5c-1.8 0-2.9.4-3.7 1 .5-1.3 1.8-3 4.7-3a1 1 0 0 0 0-2c-3 0-4.6 1.3-5.5 2.5l-.2.2c-.6-1.9-1.5-3.7-3-3.7C8.5 0 7.7.3 7 1c-2 1.5-1.7 2.9-.5 4C3.6 5.2 0 7.4 0 13c0 4.6 5 11 9 11 2 0 2.4-.5 3-1 .6.5 1 1 3 1 4 0 9-6.4 9-11 0-6-4-8-7-8M8.2 2.5c.7-.5 1-.5 1-.5.4.2 1 1.4 1.4 3-1.6-.6-2.8-1.3-3-1.8l.6-.7M15 22c-1 0-1.2-.1-1.6-.4l-.1-.2a2 2 0 0 0-2.6 0l-.1.2c-.4.3-.5.4-1.6.4-2.8 0-7-5.4-7-9 0-6 4.5-6 5-6 2 0 2.5.4 3.4 1.2l.3.3a2 2 0 0 0 2.6 0l.3-.3c1-.8 1.5-1.2 3.4-1.2.5 0 5 .1 5 6 0 3.6-4.2 9-7 9",
      nature:
        "M15.5 8a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m-7 0a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m10.43-8h-.02c-.97 0-2.14.79-3.02 1.5A13.88 13.88 0 0 0 12 .99c-1.28 0-2.62.13-3.87.51C7.24.8 6.07 0 5.09 0h-.02C3.35 0 .07 2.67 0 7.03c-.04 2.47.28 4.23 1.04 5 .26.27.88.69 1.3.9.19 3.17.92 5.23 2.53 6.37.9.64 2.19.95 3.2 1.1-.03.2-.07.4-.07.6 0 1.77 2.35 3 4 3s4-1.23 4-3c0-.2-.04-.4-.07-.59 2.57-.38 5.43-1.87 5.92-7.58.4-.22.89-.57 1.1-.8.77-.76 1.09-2.52 1.05-5C23.93 2.67 20.65 0 18.93 0M3.23 9.13c-.24.29-.84 1.16-.9 1.24A9.67 9.67 0 0 1 2 7.08c.05-3.28 2.48-4.97 3.1-5.03.25.02.72.27 1.26.65A7.95 7.95 0 0 0 4 7.82c-.14.55-.4.86-.79 1.31M12 22c-.9 0-1.95-.7-2-1 0-.65.47-1.24 1-1.6v.6a1 1 0 1 0 2 0v-.6c.52.36 1 .95 1 1.6-.05.3-1.1 1-2 1m3-3.48v.02a4.75 4.75 0 0 0-1.26-1.02c1.09-.52 2.24-1.33 2.24-2.22 0-1.84-1.78-2.2-3.98-2.2s-3.98.36-3.98 2.2c0 .89 1.15 1.7 2.24 2.22A4.8 4.8 0 0 0 9 18.54v-.03a6.1 6.1 0 0 1-2.97-.84c-1.3-.92-1.84-3.04-1.86-6.48l.03-.04c.5-.82 1.49-1.45 1.8-3.1C6 6 7.36 4.42 8.36 3.53c1.01-.35 2.2-.53 3.59-.53 1.45 0 2.68.2 3.73.57 1 .9 2.32 2.46 2.32 4.48.31 1.65 1.3 2.27 1.8 3.1l.1.18c-.06 5.97-1.95 7.01-4.9 7.19m6.63-8.2l-.11-.2a7.59 7.59 0 0 0-.74-.98 3.02 3.02 0 0 1-.79-1.32 7.93 7.93 0 0 0-2.35-5.12c.53-.38 1-.63 1.26-.65.64.07 3.05 1.77 3.1 5.03.02 1.81-.35 3.22-.37 3.24",
      objects:
        "M12 0a9 9 0 0 0-5 16.5V21s2 3 5 3 5-3 5-3v-4.5A9 9 0 0 0 12 0zm0 2a7 7 0 1 1 0 14 7 7 0 0 1 0-14zM9 17.5a9 9 0 0 0 6 0v.8a7 7 0 0 1-3 .7 7 7 0 0 1-3-.7v-.8zm.2 3a8.9 8.9 0 0 0 2.8.5c1 0 1.9-.2 2.8-.5-.6.7-1.6 1.5-2.8 1.5-1.1 0-2.1-.8-2.8-1.5zm5.5-8.1c-.8 0-1.1-.8-1.5-1.8-.5-1-.7-1.5-1.2-1.5s-.8.5-1.3 1.5c-.4 1-.8 1.8-1.6 1.8h-.3c-.5-.2-.8-.7-1.3-1.8l-.2-1A3 3 0 0 0 7 9a1 1 0 0 1 0-2c1.7 0 2 1.4 2.2 2.1.5-1 1.3-2 2.8-2 1.5 0 2.3 1.1 2.7 2.1.2-.8.6-2.2 2.3-2.2a1 1 0 1 1 0 2c-.2 0-.3.5-.3.7a6.5 6.5 0 0 1-.3 1c-.5 1-.8 1.7-1.7 1.7",
      people:
        "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24m0 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20M8 7a2 2 0 1 0 0 4 2 2 0 0 0 0-4m8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-.8 8c-.7 1.2-1.8 2-3.3 2-1.5 0-2.7-.8-3.4-2H15m3-2H6a6 6 0 1 0 12 0",
      places:
        "M6.5 12a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5.5.2.5.5-.2.5-.5.5m11-3a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5.5.2.5.5-.2.5-.5.5m5-5.5l-1-.4-.1-.1h.6c.6 0 1-.4 1-1 0-1-.9-2-2-2h-.6l-.8-1.7A3 3 0 0 0 16.8 2H7.2a3 3 0 0 0-2.8 2.3L3.6 6H3a2 2 0 0 0-2 2c0 .6.4 1 1 1h.6v.1l-1 .4a2 2 0 0 0-1.4 2l.7 7.6a1 1 0 0 0 1 .9H3v1c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-1h6v1c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-1h1.1a1 1 0 0 0 1-.9l.7-7.5a2 2 0 0 0-1.3-2.1M6.3 4.9c.1-.5.5-.9 1-.9h9.5c.4 0 .8.4 1 .9L19.2 9H4.7l1.6-4.1zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.2-3H2.8l-.7-6.6.9-.4h18l.9.4-.7 6.6z",
      recent:
        "M13 4h-2v7H9v2h2v2h2v-2h4v-2h-4zm-1-4a12 12 0 1 0 0 24 12 12 0 0 0 0-24m0 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20",
      symbols:
        "M0 0h11v2H0zm4 11h3V6h4V4H0v2h4zm11.5 6a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m0-2.99a.5.5 0 0 1 0 .99c-.28 0-.5-.22-.5-.5s.22-.49.5-.49m6 5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 2.99a.5.5 0 0 1-.5-.5.5.5 0 0 1 1 .01.5.5 0 0 1-.5.49m.5-9l-9 9 1.51 1.5 9-9zm-5-2c2.2 0 4-1.12 4-2.5V2s.98-.16 1.5.95C23 4.05 23 6 23 6s1-1.12 1-3.13C24-.02 21 0 21 0h-2v6.35A5.85 5.85 0 0 0 17 6c-2.2 0-4 1.12-4 2.5s1.8 2.5 4 2.5m-6.7 9.48L8.82 18.9a47.54 47.54 0 0 1-1.44 1.13c-.3-.3-.99-1.02-2.04-2.19.9-.83 1.47-1.46 1.72-1.89s.38-.87.38-1.33c0-.6-.27-1.18-.82-1.76-.54-.58-1.33-.87-2.35-.87-1 0-1.79.29-2.34.87-.56.6-.83 1.18-.83 1.79 0 .81.42 1.75 1.25 2.8a6.57 6.57 0 0 0-1.8 1.79 3.46 3.46 0 0 0-.51 1.83c0 .86.3 1.56.92 2.1a3.5 3.5 0 0 0 2.42.83c1.17 0 2.44-.38 3.81-1.14L8.23 24h2.82l-2.09-2.38 1.34-1.14zM3.56 14.1a1.02 1.02 0 0 1 .73-.28c.31 0 .56.08.75.25a.85.85 0 0 1 .28.66c0 .52-.42 1.11-1.26 1.78-.53-.65-.8-1.23-.8-1.74a.9.9 0 0 1 .3-.67m.18 7.9c-.43 0-.78-.12-1.06-.35-.28-.23-.41-.49-.41-.76 0-.6.5-1.3 1.52-2.09a31.23 31.23 0 0 0 2.25 2.44c-.92.5-1.69.76-2.3.76",
    },
    d = {
      search:
        "M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z",
      delete:
        "M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z",
    },
    g = {
      search: "Search",
      emojilist: "List of emoji",
      notfound: "No Emoji Found",
      clear: "Clear",
      categories: {
        search: "Search Results",
        recent: "Frequently Used",
        people: "Smileys & People",
        nature: "Animals & Nature",
        foods: "Food & Drink",
        activity: "Activity",
        places: "Travel & Places",
        objects: "Objects",
        symbols: "Symbols",
        flags: "Flags",
        custom: "Custom",
      },
      skintones: {
        1: "Default Skin Tone",
        2: "Light Skin Tone",
        3: "Medium-Light Skin Tone",
        4: "Medium Skin Tone",
        5: "Medium-Dark Skin Tone",
        6: "Dark Skin Tone",
      },
    },
    y = (function () {
      function e(e, i) {
        var n = this;
        (this.ref = e),
          (this.frequently = i),
          (this.perLine = 9),
          (this.totalFrequentLines = 4),
          (this.i18n = {}),
          (this.style = {}),
          (this.title = "Emoji Mart™"),
          (this.emoji = "department_store"),
          (this.darkMode = !(
            "function" != typeof matchMedia ||
            !matchMedia("(prefers-color-scheme: dark)").matches
          )),
          (this.color = "#ae65c5"),
          (this.hideObsolete = !0),
          (this.categories = []),
          (this.activeCategories = []),
          (this.set = "apple"),
          (this.skin = 1),
          (this.isNative = !1),
          (this.emojiSize = 24),
          (this.sheetSize = 64),
          (this.showPreview = !0),
          (this.emojiTooltip = !1),
          (this.autoFocus = !1),
          (this.custom = []),
          (this.hideRecent = !0),
          (this.notFoundEmoji = "sleuth_or_spy"),
          (this.categoriesIcons = p),
          (this.searchIcons = d),
          (this.useButton = !1),
          (this.enableFrequentEmojiSort = !1),
          (this.enableSearch = !0),
          (this.showSingleCategory = !1),
          (this.emojiClick = new t.EventEmitter()),
          (this.emojiSelect = new t.EventEmitter()),
          (this.skinChange = new t.EventEmitter()),
          (this.scrollHeight = 0),
          (this.clientHeight = 0),
          (this.firstRender = !0),
          (this.NAMESPACE = "emoji-mart"),
          (this.measureScrollbar = 0),
          (this.RECENT_CATEGORY = {
            id: "recent",
            name: "Recent",
            emojis: null,
          }),
          (this.SEARCH_CATEGORY = {
            id: "search",
            name: "Search",
            emojis: null,
            anchor: !1,
          }),
          (this.CUSTOM_CATEGORY = { id: "custom", name: "Custom", emojis: [] }),
          (this.backgroundImageFn = function (e, t) {
            return "/assets/emoji/64.png";
          });
      }
      return (
        (e.prototype.ngOnInit = function () {
          var e,
            t,
            n = this;
          (this.measureScrollbar = (function () {
            if ("undefined" == typeof document) return 0;
            var e = document.createElement("div");
            (e.style.width = "100px"),
              (e.style.height = "100px"),
              (e.style.overflow = "scroll"),
              (e.style.position = "absolute"),
              (e.style.top = "-9999px"),
              document.body.appendChild(e);
            var t = e.offsetWidth - e.clientWidth;
            return document.body.removeChild(e), t;
          })()),
            (this.i18n = Object.assign(Object.assign({}, g), this.i18n)),
            (this.i18n.categories = Object.assign(
              Object.assign({}, g.categories),
              this.i18n.categories
            )),
            (this.skin =
              JSON.parse(
                localStorage.getItem(this.NAMESPACE + ".skin") || "null"
              ) || this.skin);
          var o = (function () {
            for (var e = [], t = 0; t < arguments.length; t++)
              e = e.concat(l(arguments[t]));
            return e;
          })(i.categories);
          this.custom.length > 0 &&
            ((this.CUSTOM_CATEGORY.emojis = this.custom.map(function (e) {
              return Object.assign(Object.assign({}, e), {
                id: e.shortNames[0],
                custom: !0,
              });
            })),
            o.push(this.CUSTOM_CATEGORY)),
            void 0 !== this.include &&
              o.sort(function (e, t) {
                return n.include.indexOf(e.id) > n.include.indexOf(t.id)
                  ? 1
                  : -1;
              });
          try {
            for (var s = c(o), r = s.next(); !r.done; r = s.next()) {
              var a = r.value,
                h =
                  !this.include ||
                  !this.include.length ||
                  this.include.indexOf(a.id) > -1,
                m =
                  !(!this.exclude || !this.exclude.length) &&
                  this.exclude.indexOf(a.id) > -1;
              if (h && !m) {
                if (this.emojisToShowFilter) {
                  for (var u = [], y = a.emojis, f = 0; f < y.length; f++) {
                    var j = y[f];
                    this.emojisToShowFilter(j) && u.push(j);
                  }
                  if (u.length) {
                    var v = { emojis: u, name: a.name, id: a.id };
                    this.categories.push(v);
                  }
                } else this.categories.push(a);
                (this.categoriesIcons = Object.assign(
                  Object.assign({}, p),
                  this.categoriesIcons
                )),
                  (this.searchIcons = Object.assign(
                    Object.assign({}, d),
                    this.searchIcons
                  ));
              }
            }
          } catch (t) {
            e = { error: t };
          } finally {
            try {
              r && !r.done && (t = s.return) && t.call(s);
            } finally {
              if (e) throw e.error;
            }
          }
          var S =
              !this.include ||
              !this.include.length ||
              this.include.indexOf(this.RECENT_CATEGORY.id) > -1,
            k =
              !(!this.exclude || !this.exclude.length) &&
              this.exclude.indexOf(this.RECENT_CATEGORY.id) > -1;
          S &&
            !k &&
            ((this.hideRecent = !1),
            this.categories.unshift(this.RECENT_CATEGORY)),
            this.categories[0] && (this.categories[0].first = !0),
            this.categories.unshift(this.SEARCH_CATEGORY),
            (this.selected = this.categories.filter(function (e) {
              return e.first;
            })[0].name);
          var C = Math.min(this.categories.length, 3);
          this.setActiveCategories(
            (this.activeCategories = this.categories.slice(0, C))
          );
          var E = this.categories[C - 1].emojis.slice();
          (this.categories[C - 1].emojis = E.slice(0, 60)),
            this.ref.markForCheck(),
            setTimeout(function () {
              (n.categories[C - 1].emojis = E),
                n.setActiveCategories(n.categories),
                n.ref.markForCheck(),
                setTimeout(function () {
                  return n.updateCategoriesSize();
                });
            });
        }),
        (e.prototype.setActiveCategories = function (e) {
          var t = this;
          this.showSingleCategory
            ? (this.activeCategories = e.filter(function (e) {
                return e.name === t.selected || e === t.SEARCH_CATEGORY;
              }))
            : (this.activeCategories = e);
        }),
        (e.prototype.updateCategoriesSize = function () {
          if (
            (this.categoryRefs.forEach(function (e) {
              return e.memoizeSize();
            }),
            this.scrollRef)
          ) {
            var e = this.scrollRef.nativeElement;
            (this.scrollHeight = e.scrollHeight),
              (this.clientHeight = e.clientHeight);
          }
        }),
        (e.prototype.handleAnchorClick = function (e) {
          if (
            (this.updateCategoriesSize(),
            (this.selected = e.category.name),
            this.setActiveCategories(this.categories),
            this.SEARCH_CATEGORY.emojis)
          )
            return (
              this.handleSearch(null),
              this.searchRef.clear(),
              void this.handleAnchorClick(e)
            );
          var t = this.categoryRefs.find(function (t) {
            return t.id === e.category.id;
          });
          if (t) {
            var i = t.top;
            e.category.first ? (i = 0) : (i += 1),
              (this.scrollRef.nativeElement.scrollTop = i);
          }
          (this.selected = e.category.name),
            (this.nextScroll = e.category.name);
        }),
        (e.prototype.categoryTrack = function (e, t) {
          return t.id;
        }),
        (e.prototype.handleScroll = function () {
          var e, t;
          if (this.nextScroll)
            return (
              (this.selected = this.nextScroll), void (this.nextScroll = void 0)
            );
          if (this.scrollRef && !this.showSingleCategory) {
            var i = null;
            if (this.SEARCH_CATEGORY.emojis) i = this.SEARCH_CATEGORY;
            else {
              var n = this.scrollRef.nativeElement;
              if (0 === n.scrollTop)
                i = this.categories.find(function (e) {
                  return !0 === e.first;
                });
              else if (n.scrollHeight - n.scrollTop === this.clientHeight)
                i = this.categories[this.categories.length - 1];
              else {
                var o = function (e) {
                    s.categoryRefs
                      .find(function (t) {
                        return t.id === e.id;
                      })
                      .handleScroll(n.scrollTop) && (i = e);
                  },
                  s = this;
                try {
                  for (
                    var r = c(this.categories), a = r.next();
                    !a.done;
                    a = r.next()
                  ) {
                    o(a.value);
                  }
                } catch (t) {
                  e = { error: t };
                } finally {
                  try {
                    a && !a.done && (t = r.return) && t.call(r);
                  } finally {
                    if (e) throw e.error;
                  }
                }
              }
              this.scrollTop = n.scrollTop;
            }
            i && (this.selected = i.name);
          }
        }),
        (e.prototype.handleSearch = function (e) {
          var t, i;
          this.SEARCH_CATEGORY.emojis = e;
          try {
            for (
              var n = c(this.categoryRefs.toArray()), o = n.next();
              !o.done;
              o = n.next()
            ) {
              var s = o.value;
              "Search" === s.name
                ? ((s.emojis = e), s.updateDisplay(e ? "block" : "none"))
                : s.updateDisplay(e ? "none" : "block");
            }
          } catch (e) {
            t = { error: e };
          } finally {
            try {
              o && !o.done && (i = n.return) && i.call(n);
            } finally {
              if (t) throw t.error;
            }
          }
          (this.scrollRef.nativeElement.scrollTop = 0), this.handleScroll();
        }),
        (e.prototype.handleEnterKey = function (e, t) {
          if (
            !t &&
            null !== this.SEARCH_CATEGORY.emojis &&
            this.SEARCH_CATEGORY.emojis.length
          ) {
            if (!(t = this.SEARCH_CATEGORY.emojis[0])) return;
            this.emojiSelect.emit({ $event: e, emoji: t });
          }
          this.hideRecent || this.recent || !t || this.frequently.add(t);
          var i = this.categoryRefs.toArray()[1];
          i &&
            this.enableFrequentEmojiSort &&
            (i.getEmojis(), i.ref.markForCheck());
        }),
        (e.prototype.handleEmojiOver = function (e) {
          if (this.showPreview && this.previewRef) {
            var t = this.CUSTOM_CATEGORY.emojis.find(function (t) {
              return t.id === e.emoji.id;
            });
            t && (e.emoji = Object.assign({}, t)),
              (this.previewEmoji = e.emoji),
              clearTimeout(this.leaveTimeout);
          }
        }),
        (e.prototype.handleEmojiLeave = function () {
          var e = this;
          this.showPreview &&
            this.previewRef &&
            (this.leaveTimeout = setTimeout(function () {
              (e.previewEmoji = null), e.previewRef.ref.markForCheck();
            }, 16));
        }),
        (e.prototype.handleEmojiClick = function (e) {
          this.emojiClick.emit(e),
            this.emojiSelect.emit(e),
            this.handleEnterKey(e.$event, e.emoji);
        }),
        (e.prototype.handleSkinChange = function (e) {
          (this.skin = e),
            localStorage.setItem(this.NAMESPACE + ".skin", String(e)),
            this.skinChange.emit(e);
        }),
        (e.prototype.getWidth = function () {
          return this.style && this.style.width
            ? this.style.width
            : this.perLine * (this.emojiSize + 12) +
                12 +
                2 +
                this.measureScrollbar +
                "px";
        }),
        e
      );
    })();
  (y.decorators = [
    {
      type: t.Component,
      args: [
        {
          selector: "emoji-mart",
          template:
            '<section class="emoji-mart {{ darkMode ? \'emoji-mart-dark\' : \'\' }}"\n  [style.width]="getWidth()"\n  [ngStyle]="style">\n  <div class="emoji-mart-bar">\n    <emoji-mart-anchors\n      [categories]="categories"\n      (anchorClick)="handleAnchorClick($event)"\n      [color]="color"\n      [selected]="selected"\n      [i18n]="i18n"\n      [icons]="categoriesIcons"\n    ></emoji-mart-anchors>\n  </div>\n  <emoji-search\n    *ngIf="enableSearch"\n    #searchRef\n    [i18n]="i18n"\n    (searchResults)="handleSearch($event)"\n    (enterKey)="handleEnterKey($event)"\n    [include]="include"\n    [exclude]="exclude"\n    [custom]="custom"\n    [autoFocus]="autoFocus"\n    [icons]="searchIcons"\n    [emojisToShowFilter]="emojisToShowFilter"\n  ></emoji-search>\n  <section #scrollRef class="emoji-mart-scroll" (scroll)="handleScroll()" [attr.aria-label]="i18n.emojilist">\n    <emoji-category\n      *ngFor="let category of activeCategories; let idx = index; trackBy: categoryTrack"\n      #categoryRef\n      [id]="category.id"\n      [name]="category.name"\n      [emojis]="category.emojis"\n      [perLine]="perLine"\n      [totalFrequentLines]="totalFrequentLines"\n      [hasStickyPosition]="isNative"\n      [i18n]="i18n"\n      [hideObsolete]="hideObsolete"\n      [notFoundEmoji]="notFoundEmoji"\n      [custom]="category.id == RECENT_CATEGORY.id ? CUSTOM_CATEGORY.emojis : undefined"\n      [recent]="category.id == RECENT_CATEGORY.id ? recent : undefined"\n      [emojiIsNative]="isNative"\n      [emojiSkin]="skin"\n      [emojiSize]="emojiSize"\n      [emojiSet]="set"\n      [emojiSheetSize]="sheetSize"\n      [emojiForceSize]="isNative"\n      [emojiTooltip]="emojiTooltip"\n      [emojiBackgroundImageFn]="backgroundImageFn"\n      [emojiUseButton]="false"\n      (emojiOver)="handleEmojiOver($event)"\n      (emojiLeave)="handleEmojiLeave()"\n      (emojiClick)="handleEmojiClick($event)"\n    ></emoji-category>\n  </section>\n  <div class="emoji-mart-bar" *ngIf="showPreview">\n    <emoji-preview\n      #previewRef\n      [title]="title"\n      [emoji]="previewEmoji"\n      [idleEmoji]="emoji"\n      [emojiIsNative]="isNative"\n      [emojiSize]="38"\n      [emojiSkin]="skin"\n      [emojiSet]="set"\n      [i18n]="i18n"\n      [emojiSheetSize]="sheetSize"\n      [emojiBackgroundImageFn]="backgroundImageFn"\n      (skinChange)="handleSkinChange($event)"\n    ></emoji-preview>\n  </div>\n</section>\n',
          changeDetection: t.ChangeDetectionStrategy.OnPush,
          preserveWhitespaces: !1,
        },
      ],
    },
  ]),
    (y.ctorParameters = function () {
      return [{ type: t.ChangeDetectorRef }, { type: r }];
    }),
    (y.propDecorators = {
      perLine: [{ type: t.Input }],
      totalFrequentLines: [{ type: t.Input }],
      i18n: [{ type: t.Input }],
      style: [{ type: t.Input }],
      title: [{ type: t.Input }],
      emoji: [{ type: t.Input }],
      darkMode: [{ type: t.Input }],
      color: [{ type: t.Input }],
      hideObsolete: [{ type: t.Input }],
      categories: [{ type: t.Input }],
      activeCategories: [{ type: t.Input }],
      set: [{ type: t.Input }],
      skin: [{ type: t.Input }],
      isNative: [{ type: t.Input }],
      emojiSize: [{ type: t.Input }],
      sheetSize: [{ type: t.Input }],
      emojisToShowFilter: [{ type: t.Input }],
      showPreview: [{ type: t.Input }],
      emojiTooltip: [{ type: t.Input }],
      autoFocus: [{ type: t.Input }],
      custom: [{ type: t.Input }],
      hideRecent: [{ type: t.Input }],
      include: [{ type: t.Input }],
      exclude: [{ type: t.Input }],
      notFoundEmoji: [{ type: t.Input }],
      categoriesIcons: [{ type: t.Input }],
      searchIcons: [{ type: t.Input }],
      useButton: [{ type: t.Input }],
      enableFrequentEmojiSort: [{ type: t.Input }],
      enableSearch: [{ type: t.Input }],
      showSingleCategory: [{ type: t.Input }],
      emojiClick: [{ type: t.Output }],
      emojiSelect: [{ type: t.Output }],
      skinChange: [{ type: t.Output }],
      scrollRef: [{ type: t.ViewChild, args: ["scrollRef", { static: !0 }] }],
      previewRef: [{ type: t.ViewChild, args: ["previewRef"] }],
      searchRef: [{ type: t.ViewChild, args: ["searchRef", { static: !0 }] }],
      categoryRefs: [{ type: t.ViewChildren, args: ["categoryRef"] }],
      backgroundImageFn: [{ type: t.Input }],
    });
  var f = (function () {
    function e(e, i) {
      (this.ref = e),
        (this.emojiService = i),
        (this.skinChange = new t.EventEmitter()),
        (this.emojiData = {});
    }
    return (
      (e.prototype.ngOnChanges = function () {
        if (this.emoji) {
          this.emojiData = this.emojiService.getData(
            this.emoji,
            this.emojiSkin,
            this.emojiSet
          );
          var e = [],
            t = [];
          (this.emojiData.emoticons || []).forEach(function (i) {
            e.indexOf(i.toLowerCase()) >= 0 ||
              (e.push(i.toLowerCase()), t.push(i));
          }),
            (this.listedEmoticons = t);
        }
      }),
      e
    );
  })();
  (f.decorators = [
    {
      type: t.Component,
      args: [
        {
          selector: "emoji-preview",
          template:
            '\n  <div class="emoji-mart-preview" *ngIf="emoji && emojiData">\n    <div class="emoji-mart-preview-emoji">\n      <ngx-emoji\n        [emoji]="emoji"\n        [size]="38"\n        [isNative]="emojiIsNative"\n        [skin]="emojiSkin"\n        [size]="emojiSize"\n        [set]="emojiSet"\n        [sheetSize]="emojiSheetSize"\n        [backgroundImageFn]="emojiBackgroundImageFn"\n      ></ngx-emoji>\n    </div>\n\n    <div class="emoji-mart-preview-data">\n      <div class="emoji-mart-preview-name">{{ emojiData.name }}</div>\n      <div class="emoji-mart-preview-shortname">\n        <span class="emoji-mart-preview-shortname" *ngFor="let short_name of emojiData.shortNames">\n          :{{ short_name }}:\n        </span>\n      </div>\n      <div class="emoji-mart-preview-emoticons">\n        <span class="emoji-mart-preview-emoticon" *ngFor="let emoticon of listedEmoticons">\n          {{ emoticon }}\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <div class="emoji-mart-preview" *ngIf="!emoji">\n    <div class="emoji-mart-preview-emoji">\n      <ngx-emoji *ngIf="idleEmoji && idleEmoji.length"\n        [isNative]="emojiIsNative"\n        [skin]="emojiSkin"\n        [set]="emojiSet"\n        [emoji]="idleEmoji"\n        [backgroundImageFn]="emojiBackgroundImageFn"\n        [size]="38"\n      ></ngx-emoji>\n    </div>\n\n    <div class="emoji-mart-preview-data">\n      <span class="emoji-mart-title-label">{{ title }}</span>\n    </div>\n\n    <div class="emoji-mart-preview-skins">\n      <emoji-skins [skin]="emojiSkin" (changeSkin)="skinChange.emit($event)" [i18n]="i18n">\n      </emoji-skins>\n    </div>\n  </div>\n  ',
          changeDetection: t.ChangeDetectionStrategy.OnPush,
          preserveWhitespaces: !1,
        },
      ],
    },
  ]),
    (f.ctorParameters = function () {
      return [{ type: t.ChangeDetectorRef }, { type: i.EmojiService }];
    }),
    (f.propDecorators = {
      title: [{ type: t.Input }],
      emoji: [{ type: t.Input }],
      idleEmoji: [{ type: t.Input }],
      i18n: [{ type: t.Input }],
      emojiIsNative: [{ type: t.Input }],
      emojiSkin: [{ type: t.Input }],
      emojiSize: [{ type: t.Input }],
      emojiSet: [{ type: t.Input }],
      emojiSheetSize: [{ type: t.Input }],
      emojiBackgroundImageFn: [{ type: t.Input }],
      skinChange: [{ type: t.Output }],
    });
  var j = 0,
    v = (function () {
      function e(e) {
        (this.emojiSearch = e),
          (this.maxResults = 75),
          (this.autoFocus = !1),
          (this.include = []),
          (this.exclude = []),
          (this.custom = []),
          (this.searchResults = new t.EventEmitter()),
          (this.enterKey = new t.EventEmitter()),
          (this.isSearching = !1),
          (this.query = ""),
          (this.inputId = "emoji-mart-search-" + ++j);
      }
      return (
        (e.prototype.ngOnInit = function () {
          this.icon = this.icons.search;
        }),
        (e.prototype.ngAfterViewInit = function () {
          this.autoFocus && this.inputRef.nativeElement.focus();
        }),
        (e.prototype.clear = function () {
          (this.query = ""),
            this.handleSearch(""),
            this.inputRef.nativeElement.focus();
        }),
        (e.prototype.handleEnterKey = function (e) {
          this.query && (this.enterKey.emit(e), e.preventDefault());
        }),
        (e.prototype.handleSearch = function (e) {
          "" === e
            ? ((this.icon = this.icons.search), (this.isSearching = !1))
            : ((this.icon = this.icons.delete), (this.isSearching = !0));
          var t = this.emojiSearch.search(
            this.query,
            this.emojisToShowFilter,
            this.maxResults,
            this.include,
            this.exclude,
            this.custom
          );
          this.searchResults.emit(t);
        }),
        (e.prototype.handleChange = function () {
          this.handleSearch(this.query);
        }),
        e
      );
    })();
  (v.decorators = [
    {
      type: t.Component,
      args: [
        {
          selector: "emoji-search",
          template:
            '\n    <div class="emoji-mart-search">\n      <input\n        [id]="inputId"\n        #inputRef\n        type="search"\n        (keyup.enter)="handleEnterKey($event)"\n        [placeholder]="i18n.search"\n        [autofocus]="autoFocus"\n        [(ngModel)]="query"\n        (ngModelChange)="handleChange()"\n      />\n      \x3c!--\n      Use a <label> in addition to the placeholder for accessibility, but place it off-screen\n      http://www.maxability.co.in/2016/01/placeholder-attribute-and-why-it-is-not-accessible/\n      --\x3e\n      <label class="emoji-mart-sr-only" [htmlFor]="inputId">\n        {{ i18n.search }}\n      </label>\n      <button\n        type="button"\n        class="emoji-mart-search-icon"\n        (click)="clear()"\n        (keyup.enter)="clear()"\n        [disabled]="!isSearching"\n        [attr.aria-label]="i18n.clear"\n      >\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          viewBox="0 0 20 20"\n          width="13"\n          height="13"\n          opacity="0.5"\n        >\n          <path [attr.d]="icon" />\n        </svg>\n      </button>\n    </div>\n  ',
          preserveWhitespaces: !1,
        },
      ],
    },
  ]),
    (v.ctorParameters = function () {
      return [{ type: u }];
    }),
    (v.propDecorators = {
      maxResults: [{ type: t.Input }],
      autoFocus: [{ type: t.Input }],
      i18n: [{ type: t.Input }],
      include: [{ type: t.Input }],
      exclude: [{ type: t.Input }],
      custom: [{ type: t.Input }],
      icons: [{ type: t.Input }],
      emojisToShowFilter: [{ type: t.Input }],
      searchResults: [{ type: t.Output }],
      enterKey: [{ type: t.Output }],
      inputRef: [{ type: t.ViewChild, args: ["inputRef", { static: !0 }] }],
    });
  var S = (function () {
    function e() {
      (this.changeSkin = new t.EventEmitter()),
        (this.opened = !1),
        (this.skinTones = [1, 2, 3, 4, 5, 6]);
    }
    return (
      (e.prototype.toggleOpen = function () {
        this.opened = !this.opened;
      }),
      (e.prototype.isSelected = function (e) {
        return e === this.skin;
      }),
      (e.prototype.isVisible = function (e) {
        return this.opened || this.isSelected(e);
      }),
      (e.prototype.pressed = function (e) {
        return this.opened ? !!this.isSelected(e) : "";
      }),
      (e.prototype.tabIndex = function (e) {
        return this.isVisible(e) ? "0" : "";
      }),
      (e.prototype.expanded = function (e) {
        return this.isSelected(e) ? this.opened : "";
      }),
      (e.prototype.handleClick = function (e) {
        this.opened
          ? ((this.opened = !1), e !== this.skin && this.changeSkin.emit(e))
          : (this.opened = !0);
      }),
      e
    );
  })();
  (S.decorators = [
    {
      type: t.Component,
      args: [
        {
          selector: "emoji-skins",
          template:
            '\n    <section\n      class="emoji-mart-skin-swatches"\n      [class.opened]="opened"\n    >\n      <span\n        *ngFor="let skinTone of skinTones"\n        class="emoji-mart-skin-swatch"\n        [class.selected]="skinTone === skin"\n      >\n        <span\n          (click)="this.handleClick(skinTone)"\n          (keyup.enter)="handleClick(skinTone)"\n          (keyup.space)="handleClick(skinTone)"\n          class="emoji-mart-skin emoji-mart-skin-tone-{{ skinTone }}"\n          role="button"\n          [tabIndex]="tabIndex(skinTone)"\n          [attr.aria-hidden]="!isVisible(skinTone)"\n          [attr.aria-pressed]="pressed(skinTone)"\n          [attr.aria-haspopup]="!!isSelected(skinTone)"\n          [attr.aria-expanded]="expanded(skinTone)"\n          [attr.aria-label]="i18n.skintones[skinTone]"\n          [title]="i18n.skintones[skinTone]"\n        ></span>\n      </span>\n    </section>\n  ',
          changeDetection: t.ChangeDetectionStrategy.OnPush,
          preserveWhitespaces: !1,
        },
      ],
    },
  ]),
    (S.propDecorators = {
      skin: [{ type: t.Input }],
      i18n: [{ type: t.Input }],
      changeSkin: [{ type: t.Output }],
    });
  var k = function () {};
  (k.decorators = [
    {
      type: t.NgModule,
      args: [
        {
          imports: [n.CommonModule, o.FormsModule, i.EmojiModule],
          exports: [y, s, a, v, f, S],
          declarations: [y, s, a, v, f, S],
        },
      ],
    },
  ]),
    (e.AnchorsComponent = s),
    (e.CategoryComponent = a),
    (e.EmojiFrequentlyService = r),
    (e.EmojiSearch = u),
    (e.PickerComponent = y),
    (e.PickerModule = k),
    (e.PreviewComponent = f),
    (e.SearchComponent = v),
    (e.SkinComponent = S),
    Object.defineProperty(e, "__esModule", { value: !0 });
});
//# sourceMappingURL=ctrl-ngx-emoji-mart.umd.min.js.map
