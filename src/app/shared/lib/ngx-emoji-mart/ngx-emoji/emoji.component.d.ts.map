{"version":3,"file":"emoji.component.d.ts","sources":["emoji.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnChanges } from '@angular/core';\nimport { EmojiData } from './data/data.interfaces';\nimport { EmojiService } from './emoji.service';\nexport interface Emoji {\n    /** Renders the native unicode emoji */\n    isNative: boolean;\n    forceSize: boolean;\n    tooltip: boolean;\n    skin: 1 | 2 | 3 | 4 | 5 | 6;\n    sheetSize: 16 | 20 | 32 | 64;\n    sheetRows?: number;\n    set: 'apple' | 'google' | 'twitter' | 'facebook' | '';\n    size: number;\n    emoji: string | EmojiData;\n    backgroundImageFn: (set: string, sheetSize: number) => string;\n    fallback?: (data: any, props: any) => string;\n    emojiOver: EventEmitter<EmojiEvent>;\n    emojiLeave: EventEmitter<EmojiEvent>;\n    emojiClick: EventEmitter<EmojiEvent>;\n}\nexport interface EmojiEvent {\n    emoji: EmojiData;\n    $event: Event;\n}\nexport declare class EmojiComponent implements OnChanges, Emoji {\n    private emojiService;\n    skin: Emoji['skin'];\n    set: Emoji['set'];\n    sheetSize: Emoji['sheetSize'];\n    /** Renders the native unicode emoji */\n    isNative: Emoji['isNative'];\n    forceSize: Emoji['forceSize'];\n    tooltip: Emoji['tooltip'];\n    size: Emoji['size'];\n    emoji: Emoji['emoji'];\n    fallback?: Emoji['fallback'];\n    hideObsolete: boolean;\n    SHEET_COLUMNS: number;\n    sheetRows?: number;\n    sheetColumns?: number;\n    useButton?: boolean;\n    emojiOver: Emoji['emojiOver'];\n    emojiLeave: Emoji['emojiLeave'];\n    emojiClick: Emoji['emojiClick'];\n    style: any;\n    title: string;\n    label: string;\n    unified?: string | null;\n    custom: boolean;\n    isVisible: boolean;\n    backgroundImageFn: Emoji['backgroundImageFn'];\n    constructor(emojiService: EmojiService);\n    ngOnChanges(): boolean;\n    getData(): EmojiData;\n    getSanitizedData(): EmojiData;\n    handleClick($event: Event): void;\n    handleOver($event: Event): void;\n    handleLeave($event: Event): void;\n}\n"]}